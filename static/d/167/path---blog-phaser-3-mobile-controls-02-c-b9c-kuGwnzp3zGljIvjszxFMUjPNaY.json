{"data":{"markdownRemark":{"html":"<h2>Overiew</h2>\n<p>So when building my snowboarding game for university, I decided at the last minute to add mobile support. All I had to add was the controls, as I fixed the scaling of the game UI enough that it rendered ok on mobile. Touch events for buttons on the menu and in-game worked fine, but there was no way to use WASD or arrow keys on mobile so I needed to make something custom for mobile devices!</p>\n<h2>Goals</h2>\n<ul>\n<li>Controls only display and only work on touch devices</li>\n<li>Change as little of the current game logic as possible</li>\n</ul>\n<h2>Method</h2>\n<h3>0. Initial setup</h3>\n<p>So first of you should already have your keyboard layout for desktop defined something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>keyboard<span class=\"token punctuation\">.</span><span class=\"token function\">addKeys</span><span class=\"token punctuation\">(</span><span class=\"token string\">'W,A,S,D'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>keyboard<span class=\"token punctuation\">.</span><span class=\"token function\">createCursorKeys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Then in your <code class=\"language-text\">update</code> method for the scene you check the actions for the keycodes you are listening to like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursors\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">.</span>isDown<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tplayer<span class=\"token punctuation\">.</span><span class=\"token function\">moveLeft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">.</span>isDown<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tplayer<span class=\"token punctuation\">.</span><span class=\"token function\">moveRight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">.</span>isDown<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// do something</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>down<span class=\"token punctuation\">.</span>isDown<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// do something</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>1. Check if mobile</h3>\n<p>So in your scene <code class=\"language-text\">create</code> method where you define your scene, add an if-else statement around it. Building building the mobile controls if the device is a touch device, otherwise stick to the original keyboard controls.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sys<span class=\"token punctuation\">.</span>game<span class=\"token punctuation\">.</span>device<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>touch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursors <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>keyboard<span class=\"token punctuation\">.</span><span class=\"token function\">addKeys</span><span class=\"token punctuation\">(</span><span class=\"token string\">'W,A,S,D,UP,LEFT,RIGHT,DOWN'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">buildMobileControls</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>2. Build mobile controls</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">buildMobileControls</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Found this helps with multiple buttons being pressed at the same time on mobile</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">addPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token comment\">// Only emitting events from the top-most Game Objects in the Display List</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>topOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\t\n\t<span class=\"token comment\">// Create an object mimicking what the keyboard version would be.</span>\n\t<span class=\"token comment\">// We are going to modify this on touch events so we can check in our update() loop</span>\n\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursors <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">'up'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">'left'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">'right'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">'down'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// keyboard listeners to be user for each key</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">pointerDown</span> <span class=\"token operator\">=</span> key <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// modifies this.cursors with the property that we check in update() method</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursors<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isDown <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">pointerUp</span> <span class=\"token operator\">=</span> key <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursors<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isDown <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// button sizing</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token constant\">WIDTH</span> <span class=\"token operator\">=</span> <span class=\"token number\">167</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token constant\">HEIGHT</span> <span class=\"token operator\">=</span> <span class=\"token number\">153</span>\n\n\t<span class=\"token comment\">// gutter width between buttons</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token constant\">GUTTER</span> <span class=\"token operator\">=</span> <span class=\"token number\">12</span>\n\t\n\n\t<span class=\"token comment\">// Create a button helper</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createBtn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span><span class=\"token constant\">WIDTH</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">=</span><span class=\"token constant\">HEIGHT</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">.</span><span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> <span class=\"token number\">0xff0000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.07</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">setOrigin</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">setScrollFactor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">setInteractive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pointerdown'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">pointerDown</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pointerup'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">pointerUp</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\">// Y coordinate to place buttons</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token constant\">BTN_Y</span> <span class=\"token operator\">=</span> <span class=\"token constant\">GAME_HEIGHT</span> <span class=\"token operator\">-</span> <span class=\"token constant\">HEIGHT</span> <span class=\"token operator\">-</span> <span class=\"token constant\">GUTTER</span>\n\n\t<span class=\"token comment\">// create player control buttons</span>\n\t<span class=\"token function\">createBtn</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span> \n\t\t<span class=\"token constant\">GUTTER</span><span class=\"token punctuation\">,</span> \n\t\t<span class=\"token constant\">BTN_Y</span>\n\t<span class=\"token punctuation\">)</span>\n\t<span class=\"token function\">createBtn</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token string\">'right'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token constant\">WIDTH</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token constant\">GUTTER</span><span class=\"token punctuation\">,</span> \n\t\t<span class=\"token constant\">BTN_Y</span>\n\t<span class=\"token punctuation\">)</span>\n\t<span class=\"token function\">createBtn</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token string\">'up'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token constant\">GAME_WIDTH</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token constant\">WIDTH</span> <span class=\"token operator\">+</span> <span class=\"token constant\">GUTTER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n\t\t<span class=\"token constant\">BTN_Y</span>\n\t<span class=\"token punctuation\">)</span>\n\t<span class=\"token function\">createBtn</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token string\">'down'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token constant\">GAME_WIDTH</span> <span class=\"token operator\">-</span> <span class=\"token constant\">WIDTH</span> <span class=\"token operator\">-</span> <span class=\"token constant\">GUTTER</span><span class=\"token punctuation\">,</span> \n\t\t<span class=\"token constant\">BTN_Y</span>\n\t<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<!-- <img src=\"images/phas3r.png\" /> -->\n<ol>\n<li>Define your keyboard controls</li>\n<li>Mimic them using your mobile controls so you don't have to change code structure too much</li>\n<li>Draw your mobile controls</li>\n<li>Finishing touches</li>\n</ol>","frontmatter":{"date":"October 29, 2018","path":"/blog/phaser-3-mobile-controls","title":"Phaser 3 mobile controls"}}},"pageContext":{}}